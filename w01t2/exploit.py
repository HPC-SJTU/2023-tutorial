from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from config import KEY_BYTE_CNT

KEY_MAX = 256 ** KEY_BYTE_CNT

file_in = open("secret.bin", "rb")
tag, nonce, ciphertext = [ file_in.read(x) for x in (16, 16, -1) ]
file_in.close()

for key in range(KEY_MAX):
    try:
        cipher = AES.new(key.to_bytes(KEY_BYTE_CNT, byteorder="big").zfill(16), AES.MODE_GCM, nonce=nonce)
        data = cipher.decrypt_and_verify(ciphertext, tag)
    except ValueError:
        # decrypt failed, go to next round
        continue
    print("Password found! The source data is:")
    print(data.decode())
    break
